import React, { useEffect } from 'react';
import './FormBlock.css';

function FormBlock() {
    useEffect(() => {
    const radioUnique = document.querySelector(".radio-gender-unique");
    const radioGroup = document.getElementsByName("radio-group-1");
    const otherFields = document.getElementById("other-gender-fields");
    const mainFields = document.getElementById("main-fields");

    const updateFormState = () => {
      if (radioUnique && radioUnique.checked) {
        otherFields?.classList.add("active");
        mainFields?.classList.add("disabled-section");
        mainFields?.querySelectorAll("input, select, textarea, button").forEach(
          (el) => (el.disabled = true)
        );
      } else {
        otherFields?.classList.remove("active");
        mainFields?.classList.remove("disabled-section");
        mainFields?.querySelectorAll("input, select, textarea, button").forEach(
          (el) => (el.disabled = false)
        );
      }
    };

    radioGroup.forEach((r) => r.addEventListener("change", updateFormState));
    window.addEventListener("DOMContentLoaded", updateFormState);
    updateFormState();

    // === –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã ===
    const form = document.getElementById("test-form");
    const messageBox = document.getElementById("form-message");
    const telInput = form.querySelector('input[name="field-tel"]');

    // –ê–≤—Ç–æ—Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    telInput.addEventListener("input", () => {
      let val = telInput.value.replace(/[^\d]/g, "");
      if (val.length > 11) val = val.slice(0, 11);
      let formatted = "";
      if (val.length > 0) {
        formatted = "+7 ";
        if (val.length > 1) formatted += val.slice(1, 4);
        if (val.length > 4) formatted += " " + val.slice(4, 7);
        if (val.length > 7) formatted += "-" + val.slice(7, 9);
        if (val.length > 9) formatted += "-" + val.slice(9, 11);
      }
      telInput.value = formatted;
    });

    form.addEventListener("submit", (e) => {
      e.preventDefault();
      let hasError = false;
      messageBox.textContent = "";
      document.querySelectorAll(".error-message").forEach((el) => (el.textContent = ""));

      const fio = form.querySelector('input[name="field-name"]');
      if (!fio.value.trim()) {
        fio.insertAdjacentHTML("afterend", '<div class="error-message" id="error-fio">–í–≤–µ–¥–∏—Ç–µ –§–ò–û</div>');
        hasError = true;
      }

      const tel = form.querySelector('input[name="field-tel"]');
      const telPattern = /^\+7 \d{3} \d{3}-\d{2}-\d{2}$/;
      if (!tel.value.trim() || !telPattern.test(tel.value.trim())) {
        document.getElementById("error-tel").textContent = "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞";
        hasError = true;
      }

      const email = form.querySelector('input[name="field-email"]');
      const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!email.value.trim() || !emailPattern.test(email.value.trim())) {
        document.getElementById("error-email").textContent = "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email";
        hasError = true;
      }

      const date = form.querySelector('input[name="field-date"]');
      if (!date.value.trim()) {
        date.insertAdjacentHTML("afterend", '<div class="error-message">–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è</div>');
        hasError = true;
      }

      const check = form.querySelector('input[name="check-1"]');
      if (!check.checked) {
        document.getElementById("error-check").textContent = "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≥–ª–∞—Å–∏—Ç—å—Å—è —Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–º";
        hasError = true;
      }

      if (!hasError) {
        messageBox.textContent = "‚úÖ –§–æ—Ä–º–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!";
        messageBox.classList.add("success");
      } else {
        messageBox.textContent = "‚ùå –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ —Ñ–æ—Ä–º–µ";
        messageBox.classList.remove("success");
      }
    });

    return () => {
      radioGroup.forEach((r) => r.removeEventListener("change", updateFormState));
      window.removeEventListener("DOMContentLoaded", updateFormState);
      form?.removeEventListener("submit", () => {});
    };
  }, []);

    return (
        <section className="form-block order-3">
            <h2 className="main-field-name">–§–æ—Ä–º–∞:</h2>
            <div className="main-field border-box">
                <form id="test-form" noValidate>
                <div className="form">
                    <label>
                    –§–ò–û: <br />
                    <input name="field-name" type="text" title="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û" placeholder="–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á" />
                    </label>

                    <label>
                    –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: <br />
                    <input
                        name="field-tel"
                        type="tel"
                        title="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä"
                        placeholder="+7 800 555-35-35"
                        pattern="^\\+?[0-9\\s\\-()]{10,20}$"
                        maxLength="20"
                        autoComplete="off"
                    />
                    </label>
                    <div className="error-message" id="error-tel"></div>

                    <label>
                    –ê–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã: <br />
                    <input
                        name="field-email"
                        type="email"
                        title="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã"
                        placeholder="ExampleAdress@example.com"
                    />
                    </label>
                    <div className="error-message" id="error-email"></div>

                    <label>
                    –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: <br />
                    <input name="field-date" type="date" defaultValue="2000-01-01" />
                    </label>

                    <div style={{ paddingTop: "8px" }}>
                    –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –ø–æ–ª:
                    <label>
                        <br />
                        <input name="radio-group-1" defaultChecked type="radio" />
                        –ú—É–∂—Å–∫–æ–π
                    </label>
                    <label>
                        <input name="radio-group-1" type="radio" />
                        –ñ–µ–Ω—Å–∫–∏–π
                    </label>
                    <label>
                        <input name="radio-group-1" type="radio" className="radio-gender-unique" />
                        –î—Ä—É–≥–æ–π
                    </label>

                    <div id="other-gender-fields" className="section-gender-fun">
                        üö´ –í –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ç–æ–ª—å–∫–æ –¥–≤–∞ –ø–æ–ª–∞.
                    </div>
                    </div>

                    <div id="main-fields">
                    <label>
                        –í–∞—à–∏ –ª—é–±–∏–º—ã–µ —è–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è <br />
                        <select name="programm-lang[]" multiple className="multibox-1" size="10">
                        <option value="Pascal">Pascal</option>
                        <option value="C">C</option>
                        <option value="C++">C++</option>
                        <option value="JavaScript">JavaScript</option>
                        <option value="PHP">PHP</option>
                        <option value="Python">Python</option>
                        <option value="Haskel">Haskel</option>
                        <option value="Clojure">Clojure</option>
                        <option value="Prolog">Prolog</option>
                        <option value="Scala">Scala</option>
                        </select>
                    </label>

                    <label>
                        –ù–∞–ø–∏—à–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ: <br />
                        <textarea name="multi-field"></textarea>
                    </label>

                    <label style={{ display: "block", position: "relative" }}>
                        <input name="check-1" type="checkbox" /> –° –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–º –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω(–∞)
                    </label>
                    <div className="error-message" id="error-check"></div>

                    <input type="submit" value="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å" />
                    <div id="form-message" className="form-message"></div>
                    </div>
                </div>
                </form>
            </div>
        </section>
    );
}

export default FormBlock;